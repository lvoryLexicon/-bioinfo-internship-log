这是登录服务器的指令
ssh shenyz@222.29.188.221
这是上传文件的代码
scp /Users/shenyz/Downloads/delly_v1.3.3_linux_x86_64bit shenyz@222.29.188.221:/public/home/shenyz
这是让可执行文件获取权限的代码
chmod +x delly_v1.3.3_linux_x86_64bit
打开文件
./delly_v1.3.3_linux_x86_64bit
对比参考基因组和.bam文件
./delly_v1.3.3_linux_x86_64bit call -g fixed_human_virus.fa -o delly_output.bcf zzq_hv.sorted.bam
使用多线程的话命令如下
OMP_NUM_THREADS=12 ./delly_v1.3.3_linux_x86_64bit call -g fixed_human_virus.fa -o delly_output.bcf zzq_hv.sorted.bam
这一步得出的结果都是0，另外，老师说多线程是预编译的，所以在执行的时候不能多核，另外要检查的是插入：INS
OMP_NUM_THREADS=12 ./delly_v1.3.3_linux_x86_64bit call -g fixed_human_virus.fa -o delly_output.bcf map.sorted.bam

只检测特定变异类型（如缺失）
OMP_NUM_THREADS=4 ./delly_v1.3.3_linux_x86_64bit call -t INS -g fixed_human_virus.fa -o delly_DEL.bcf map.sorted.bam

重新比对了一下，去掉了-ps
bwa mem -t 12 -v 1 fixed_human_virus.fa ../zzq_1.clean.fq.gz ../zzq_2.clean.fq.gz > map.sam
重新排序
samtools sort -@ 12 -o map.sorted.bam map.sam

用来看文件大小
ll -rth
这一步把BND都提取出来了
bcftools view -i 'SVTYPE="BND"' -Ov -o delly_BND.vcf delly_ALL.vcf
使用 bcftools 精确筛选chr17
bcftools view -i 'CHROM=="chr17" && SVTYPE=="BND"' -Ov -o delly_BND_chr17.vcf delly_ALL.vcf

对数据进行清洗
fastp -i zzq2_1.fq.gz -I zzq2_2.fq.gz \
      -o zzq2_1.trim.fq.gz -O zzq2_2.trim.fq.gz \
      --thread 12 --detect_adapter_for_pe
对数据进行比对
bwa mem -t 12 fixed_human_virus.fa \
        zzq2_1.trim.fq.gz zzq2_2.trim.fq.gz \
  | samtools view -b - \
  | samtools sort -@ 4 -o zzq2.sorted.bam
samtools index zzq2.sorted.bam

添加 Bioconda & Conda-forge 源，再重新创建环境
# 添加必要的生信源
conda config --add channels defaults
conda config --add channels bioconda
conda config --add channels conda-forge
conda config --set channel_priority strict

# 创建新环境并安装 bcftools
conda create -n bcf_env bcftools=1.17 -y

# 激活新环境
conda activate bcf_env

# 转换 bcf 为 vcf
bcftools view all_sv.bcf -Ov -o delly_ALL2.vcf
这一步把BND都提取出来了
bcftools view -i 'SVTYPE="BND"' -Ov -o delly_BND2.vcf delly_ALL2.vcf
使用 bcftools 精确筛选chr17
bcftools view -i 'CHROM=="chr17" && SVTYPE=="BND"' -Ov -o delly_BND2_chr17.vcf delly_ALL2.vcf
搜索是否有病毒在新的文件
grep MN772835 delly_ALL2.vcf(失败）

检查环境的命令
 conda environments:
激活我之前的环境
conda activate bcftools_env
看看版本号
bcftools 1.17
bgzip 压缩 VCF 文件
bgzip delly_BND_chr17.vcf
bgzip delly_BND2_chr17.vcf
建立 tabix 索引
tabix -p vcf delly_BND_chr17.vcf.gz
tabix -p vcf delly_BND2_chr17.vcf.gz
重新运行合并命令
bcftools concat -a -O v -o merged_BND_chr17.vcf delly_BND_chr17.vcf.gz delly_BND2_chr17.vcf.gz

合并bam（注意一定得有索引文件）
samtools merge -@ 12 merged.bam zzq2.sorted.bam map.sorted.bam
对bam进行索引
samtools index merged.bam
跑delly：
./delly_v1.3.3_linux_x86_64bit call \
  -g reference.fa \
  -o merged.sv.bcf \
  merged.bam
筛选一下BND
grep "SVTYPE=BND" merged.sv.vcf > merged.BND.vcf



