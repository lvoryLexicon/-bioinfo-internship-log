好的，以下是用更朴实、直接、详细但易懂的语言重新整理的内容，去掉了所有 emoji 和夸张修辞，更符合多组学实验室里研究生写作风格的实际表达：

---

# 一、常用 Linux 基础命令与示例

## 1. 文件和目录操作

| 命令      | 说明            | 示例                                                       |
| ------- | ------------- | -------------------------------------------------------- |
| `ls`    | 列出当前目录的文件和子目录 | `ls -l` 显示详细信息，`ls -a` 显示隐藏文件                            |
| `cd`    | 切换目录          | `cd /var/log` 进入指定目录                                     |
| `pwd`   | 显示当前所在的完整路径   | `pwd`                                                    |
| `mkdir` | 创建新目录         | `mkdir mydir` 创建单层目录，`mkdir -p a/b/c` 递归创建多级目录           |
| `rm`    | 删除文件或目录       | `rm file.txt` 删除文件，`rm -rf mydir/` 递归强制删除目录（操作前需确认）      |
| `cp`    | 复制文件或目录       | `cp file1.txt file2.txt` 复制文件，`cp -r dir1/ dir2/` 递归复制目录 |
| `mv`    | 移动或重命名文件      | `mv old.txt new.txt` 改名，`mv file.txt /tmp/` 移动到目录        |

---

## 2. 查看文件内容

| 命令              | 说明          | 示例                                                  |
| --------------- | ----------- | --------------------------------------------------- |
| `cat`           | 直接输出整个文件内容  | `cat file.txt`                                      |
| `less` / `more` | 分页查看较大的文本文件 | `less /var/log/syslog` 可上下翻页                        |
| `head`          | 查看文件开头几行    | `head -n 10 file.txt` 显示前10行                        |
| `tail`          | 查看文件结尾几行    | `tail -n 20 log.txt` 查看末尾20行；`tail -f log.txt` 实时输出 |
| `wc`            | 统计行数、字数、字符数 | `wc -l file.txt` 统计行数                               |
| `grep`          | 查找包含关键词的行   | `grep "error" log.txt`，`grep -r "main" ./src/` 递归查找 |

---

## 3. 软件包管理（Debian/Ubuntu 系）

| 命令                 | 说明      | 示例                      |
| ------------------ | ------- | ----------------------- |
| `sudo apt update`  | 更新软件源列表 | `sudo apt update`       |
| `sudo apt install` | 安装软件    | `sudo apt install git`  |
| `sudo apt remove`  | 卸载软件    | `sudo apt remove nginx` |

---

## 4. 用户和权限管理

| 命令       | 说明                     | 示例                               |
| -------- | ---------------------- | -------------------------------- |
| `whoami` | 显示当前用户名                | `whoami`                         |
| `id`     | 显示当前用户的 UID、GID、所属组等信息 | `id`                             |
| `chmod`  | 修改权限（可执行、读写等）          | `chmod +x script.sh` 给脚本添加执行权限   |
| `chown`  | 修改文件所有者                | `sudo chown user:group file.txt` |
| `sudo`   | 以管理员权限运行命令             | `sudo reboot` 重启系统               |

---

## 5. 查看系统资源情况

| 命令        | 说明               | 示例                |
| --------- | ---------------- | ----------------- |
| `df -h`   | 查看磁盘使用情况（人类可读单位） | `df -h`           |
| `du -sh`  | 查看某目录或文件大小       | `du -sh /var/log` |
| `free -h` | 查看内存使用情况         | `free -h`         |
| `uptime`  | 查看系统运行时间和负载      | `uptime`          |
| `ps aux`  | 查看所有正在运行的进程      | `ps aux`          |

---

## 6. 网络相关命令

| 命令         | 说明              | 示例                                  |
| ---------- | --------------- | ----------------------------------- |
| `ping`     | 测试与远程主机是否可连通    | `ping google.com`                   |
| `curl`     | 请求网页或 API 接口内容  | `curl http://example.com`           |
| `wget`     | 下载文件            | `wget https://example.com/file.zip` |
| `ip a`     | 查看本机网络接口和 IP 信息 | `ip a`                              |
| `ss -tuln` | 查看当前监听的端口       | `ss -tuln` 代替老旧的 `netstat`          |

---

## 7. 文件查找与文本搜索

| 命令       | 说明            | 示例                                         |
| -------- | ------------- | ------------------------------------------ |
| `find`   | 查找文件          | `find . -name "*.log"`                     |
| `locate` | 快速查找文件（基于数据库） | `locate nginx.conf`（首次使用需 `sudo updatedb`） |
| `grep`   | 搜索包含关键词的内容    | `grep "404" access.log`                    |
| `xargs`  | 与管道结合用于批量处理   | `cat list.txt \| xargs rm`                 |

---

# 二、常见 Linux 性能分析工具

## 1. `top`：实时查看系统进程资源占用

* `top`
  启动后会持续刷新，显示所有进程的 CPU 和内存使用情况
  常用交互：

  * `P`：按 CPU 排序
  * `M`：按内存排序
  * `k`：输入 PID 终止进程

* `top -p 1234,5678`
  仅查看特定进程的资源占用情况，可用于观察关键服务运行状态

---

## 2. `vmstat`：查看内存、CPU 和 I/O 的总体状态

* `vmstat 1`
  每秒更新一次资源使用信息，适合实时监控系统性能变化

* `vmstat 1 3`
  每秒输出一次，共输出三次，第一行为平均值，后两行为实时采样

* `vmstat -s`
  以摘要形式输出系统累计的资源统计信息，如总内存、交换次数等

---

## 3. `iostat`：查看磁盘和 CPU 的使用情况

* `iostat`
  默认输出所有设备的基本 I/O 和 CPU 统计信息

* `iostat -x 2`
  每两秒显示一次更详细的磁盘 I/O 指标，包括 IOPS、await（平均等待时间）、%util（磁盘使用率）等

* `iostat -d -k 1 5`
  每秒输出一次磁盘统计（单位为 KB），共输出五次

---

## 4. `perf`：分析程序性能瓶颈（适合开发和优化）

* `perf top`
  实时查看当前最耗 CPU 的函数或系统调用

* `perf record -g ./program`
  运行指定程序并记录执行过程中的函数调用和 CPU 使用情况（带调用图）

* `perf report`
  展示 `perf record` 产生的数据，分析热点函数及其调用路径

* `perf stat ls`
  对 `ls` 命令执行过程做性能统计，输出 CPU 指令数、上下文切换、缓存命中率等信息

---

## 5. `netstat`：查看网络连接和端口状态（已被 `ss` 替代，但仍常用）

* `netstat -tulpn`
  显示所有监听中的 TCP 和 UDP 端口及其对应的进程名和 PID（需要 root 权限）
  选项说明：

  * `-t`：仅显示 TCP
  * `-u`：仅显示 UDP
  * `-l`：只列出监听状态
  * `-p`：显示进程信息
  * `-n`：用数字显示 IP 和端口（避免 DNS 解析影响）

* `netstat -an`
  显示所有连接状态，包括已建立、等待关闭的连接，IP 用数字显示

* `netstat -s`
  输出网络协议的统计信息，例如 TCP 丢包数、重传次数等

---

如果你是在生信实验中第一次接触 Linux，这些命令基本覆盖了你日常文件管理、数据预览、资源排查和性能监控的主要需求。遇到不清楚的命令参数可以使用 `man 命令名` 查看帮助文档，例如 `man grep`。
